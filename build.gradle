buildscript {
    ext {
        springBootVersion = '1.2.2.RELEASE'
        encoding = 'UTF-8'
        compatibility = 1.8
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'

sourceCompatibility = compatibility
targetCompatibility = compatibility

tasks.withType(AbstractCompile) each { it.options.encoding = encoding }
tasks.withType(GroovyCompile) each { it.groovyOptions.encoding = encoding }

jar {
    baseName = 'spring-boot-cluster-examples'
    version = '0.1.0'
}

test {
    if (project.hasProperty('sysprops')) {
        project.sysprops.split('\\s+').each {
            systemProperty it.split('=')[0], it.split('=')[1]
        }
    }
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")


    compile('com.amazonaws:aws-java-sdk-dynamodb:1.9.33')
    compile('com.amazonaws:aws-dynamodb-session-tomcat:1.0.2') {
        exclude group: 'org.apache.tomcat'
    }

    compile("commons-lang:commons-lang:2.6")

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("junit:junit:4.12")
    testCompile("org.spockframework:spock-core:0.7-groovy-2.0") {
        exclude group: 'org.codehaus.groovy'
    }
    testCompile("org.spockframework:spock-spring:0.7-groovy-2.0") {
        exclude group: 'org.codehaus.groovy'
    }
}

